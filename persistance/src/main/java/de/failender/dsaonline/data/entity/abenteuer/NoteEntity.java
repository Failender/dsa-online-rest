// Generated by delombok at Thu Nov 22 18:54:11 CET 2018
package de.failender.dsaonline.data.entity.abenteuer;

import de.failender.dsaonline.data.entity.BaseEntity;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import java.math.BigInteger;

@Entity
@Table(name = "ABENTEUER_NOTES")
public class NoteEntity extends BaseEntity {
	private BigInteger held;
	@Column(name = "ABENTEUER_ID")
	private Integer abenteuerId;
	private String note;


	public NoteEntity() {
	}


	public BigInteger getHeld() {
		return this.held;
	}


	public Integer getAbenteuerId() {
		return this.abenteuerId;
	}


	public String getNote() {
		return this.note;
	}


	public void setHeld(final BigInteger held) {
		this.held = held;
	}


	public void setAbenteuerId(final Integer abenteuerId) {
		this.abenteuerId = abenteuerId;
	}


	public void setNote(final String note) {
		this.note = note;
	}

	@Override

	public boolean equals(final Object o) {
		if (o == this) return true;
		if (!(o instanceof NoteEntity)) return false;
		final NoteEntity other = (NoteEntity) o;
		if (!other.canEqual((Object) this)) return false;
		final Object this$held = this.getHeld();
		final Object other$held = other.getHeld();
		if (this$held == null ? other$held != null : !this$held.equals(other$held)) return false;
		final Object this$abenteuerId = this.getAbenteuerId();
		final Object other$abenteuerId = other.getAbenteuerId();
		if (this$abenteuerId == null ? other$abenteuerId != null : !this$abenteuerId.equals(other$abenteuerId)) return false;
		final Object this$note = this.getNote();
		final Object other$note = other.getNote();
		if (this$note == null ? other$note != null : !this$note.equals(other$note)) return false;
		return true;
	}


	protected boolean canEqual(final Object other) {
		return other instanceof NoteEntity;
	}

	@Override

	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final Object $held = this.getHeld();
		result = result * PRIME + ($held == null ? 43 : $held.hashCode());
		final Object $abenteuerId = this.getAbenteuerId();
		result = result * PRIME + ($abenteuerId == null ? 43 : $abenteuerId.hashCode());
		final Object $note = this.getNote();
		result = result * PRIME + ($note == null ? 43 : $note.hashCode());
		return result;
	}

	@Override

	public java.lang.String toString() {
		return "NoteEntity(held=" + this.getHeld() + ", abenteuerId=" + this.getAbenteuerId() + ", note=" + this.getNote() + ")";
	}
}
