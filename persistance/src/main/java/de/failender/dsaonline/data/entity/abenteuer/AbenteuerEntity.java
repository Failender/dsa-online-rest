// Generated by delombok at Thu Nov 22 18:54:11 CET 2018
package de.failender.dsaonline.data.entity.abenteuer;

import de.failender.dsaonline.data.entity.AuditingEntity;
import javax.persistence.*;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

@Entity
@Table(name = "ABENTEUER")
public class AbenteuerEntity extends AuditingEntity {
	private String name;
	private int ap;
	@Column(name = "GRUPPE_ID")
	private Integer gruppeId;
	@Column(name = "KAMPAGNE")
	private Integer kampagne;
	@Column(name = "DATUM")
	private Integer datum;
	@JoinColumn(name = "ABENTEUER_ID")
	@OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER)
	private Set<BonusApEntity> bonusAp = new HashSet<>();
	@JoinColumn(name = "ABENTEUER_ID")
	@OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER)
	private Set<SeEntity> ses = new HashSet<>();
	@JoinColumn(name = "ABENTEUER_ID")
	@OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER)
	private Set<LmEntity> lms = new HashSet<>();
	@JoinColumn(name = "ABENTEUER_ID")
	@OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER)
	private Set<NoteEntity> notes = new HashSet<>();


	public AbenteuerEntity() {
	}


	public String getName() {
		return this.name;
	}


	public int getAp() {
		return this.ap;
	}


	public Integer getGruppeId() {
		return this.gruppeId;
	}


	public Integer getKampagne() {
		return this.kampagne;
	}


	public Integer getDatum() {
		return this.datum;
	}


	public Set<BonusApEntity> getBonusAp() {
		return this.bonusAp;
	}


	public Set<SeEntity> getSes() {
		return this.ses;
	}


	public Set<LmEntity> getLms() {
		return this.lms;
	}


	public Set<NoteEntity> getNotes() {
		return this.notes;
	}


	public void setName(final String name) {
		this.name = name;
	}


	public void setAp(final int ap) {
		this.ap = ap;
	}


	public void setGruppeId(final Integer gruppeId) {
		this.gruppeId = gruppeId;
	}


	public void setKampagne(final Integer kampagne) {
		this.kampagne = kampagne;
	}


	public void setDatum(final Integer datum) {
		this.datum = datum;
	}


	public void setBonusAp(final Set<BonusApEntity> bonusAp) {
		this.bonusAp = bonusAp;
	}


	public void setSes(final Set<SeEntity> ses) {
		this.ses = ses;
	}


	public void setLms(final Set<LmEntity> lms) {
		this.lms = lms;
	}


	public void setNotes(final Set<NoteEntity> notes) {
		this.notes = notes;
	}

	@Override

	public boolean equals(final Object o) {
		if (o == this) return true;
		if (!(o instanceof AbenteuerEntity)) return false;
		final AbenteuerEntity other = (AbenteuerEntity) o;
		if (!other.canEqual((Object) this)) return false;
		final Object this$name = this.getName();
		final Object other$name = other.getName();
		if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
		if (this.getAp() != other.getAp()) return false;
		final Object this$gruppeId = this.getGruppeId();
		final Object other$gruppeId = other.getGruppeId();
		if (this$gruppeId == null ? other$gruppeId != null : !this$gruppeId.equals(other$gruppeId)) return false;
		final Object this$kampagne = this.getKampagne();
		final Object other$kampagne = other.getKampagne();
		if (this$kampagne == null ? other$kampagne != null : !this$kampagne.equals(other$kampagne)) return false;
		final Object this$datum = this.getDatum();
		final Object other$datum = other.getDatum();
		if (this$datum == null ? other$datum != null : !this$datum.equals(other$datum)) return false;
		final Object this$bonusAp = this.getBonusAp();
		final Object other$bonusAp = other.getBonusAp();
		if (this$bonusAp == null ? other$bonusAp != null : !this$bonusAp.equals(other$bonusAp)) return false;
		final Object this$ses = this.getSes();
		final Object other$ses = other.getSes();
		if (this$ses == null ? other$ses != null : !this$ses.equals(other$ses)) return false;
		final Object this$lms = this.getLms();
		final Object other$lms = other.getLms();
		if (this$lms == null ? other$lms != null : !this$lms.equals(other$lms)) return false;
		final Object this$notes = this.getNotes();
		final Object other$notes = other.getNotes();
		if (this$notes == null ? other$notes != null : !this$notes.equals(other$notes)) return false;
		return true;
	}


	protected boolean canEqual(final Object other) {
		return other instanceof AbenteuerEntity;
	}

	@Override

	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final Object $name = this.getName();
		result = result * PRIME + ($name == null ? 43 : $name.hashCode());
		result = result * PRIME + this.getAp();
		final Object $gruppeId = this.getGruppeId();
		result = result * PRIME + ($gruppeId == null ? 43 : $gruppeId.hashCode());
		final Object $kampagne = this.getKampagne();
		result = result * PRIME + ($kampagne == null ? 43 : $kampagne.hashCode());
		final Object $datum = this.getDatum();
		result = result * PRIME + ($datum == null ? 43 : $datum.hashCode());
		final Object $bonusAp = this.getBonusAp();
		result = result * PRIME + ($bonusAp == null ? 43 : $bonusAp.hashCode());
		final Object $ses = this.getSes();
		result = result * PRIME + ($ses == null ? 43 : $ses.hashCode());
		final Object $lms = this.getLms();
		result = result * PRIME + ($lms == null ? 43 : $lms.hashCode());
		final Object $notes = this.getNotes();
		result = result * PRIME + ($notes == null ? 43 : $notes.hashCode());
		return result;
	}

	@Override

	public java.lang.String toString() {
		return "AbenteuerEntity(name=" + this.getName() + ", ap=" + this.getAp() + ", gruppeId=" + this.getGruppeId() + ", kampagne=" + this.getKampagne() + ", datum=" + this.getDatum() + ", bonusAp=" + this.getBonusAp() + ", ses=" + this.getSes() + ", lms=" + this.getLms() + ", notes=" + this.getNotes() + ")";
	}
}
