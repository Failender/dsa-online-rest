// Generated by delombok at Thu Nov 22 18:54:11 CET 2018
package de.failender.dsaonline.scripting.helper;

import java.util.List;

public class MethodInformation {
	private String name;
	private Class returnType;
	private String returnDescription;
	private String description;
	private List<MethodParameter> parameter;


	public String getName() {
		return this.name;
	}


	public Class getReturnType() {
		return this.returnType;
	}


	public String getReturnDescription() {
		return this.returnDescription;
	}


	public String getDescription() {
		return this.description;
	}


	public List<MethodParameter> getParameter() {
		return this.parameter;
	}


	public void setName(final String name) {
		this.name = name;
	}


	public void setReturnType(final Class returnType) {
		this.returnType = returnType;
	}


	public void setReturnDescription(final String returnDescription) {
		this.returnDescription = returnDescription;
	}


	public void setDescription(final String description) {
		this.description = description;
	}


	public void setParameter(final List<MethodParameter> parameter) {
		this.parameter = parameter;
	}

	@Override

	public boolean equals(final Object o) {
		if (o == this) return true;
		if (!(o instanceof MethodInformation)) return false;
		final MethodInformation other = (MethodInformation) o;
		if (!other.canEqual((Object) this)) return false;
		final Object this$name = this.getName();
		final Object other$name = other.getName();
		if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
		final Object this$returnType = this.getReturnType();
		final Object other$returnType = other.getReturnType();
		if (this$returnType == null ? other$returnType != null : !this$returnType.equals(other$returnType)) return false;
		final Object this$returnDescription = this.getReturnDescription();
		final Object other$returnDescription = other.getReturnDescription();
		if (this$returnDescription == null ? other$returnDescription != null : !this$returnDescription.equals(other$returnDescription)) return false;
		final Object this$description = this.getDescription();
		final Object other$description = other.getDescription();
		if (this$description == null ? other$description != null : !this$description.equals(other$description)) return false;
		final Object this$parameter = this.getParameter();
		final Object other$parameter = other.getParameter();
		if (this$parameter == null ? other$parameter != null : !this$parameter.equals(other$parameter)) return false;
		return true;
	}


	protected boolean canEqual(final Object other) {
		return other instanceof MethodInformation;
	}

	@Override

	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final Object $name = this.getName();
		result = result * PRIME + ($name == null ? 43 : $name.hashCode());
		final Object $returnType = this.getReturnType();
		result = result * PRIME + ($returnType == null ? 43 : $returnType.hashCode());
		final Object $returnDescription = this.getReturnDescription();
		result = result * PRIME + ($returnDescription == null ? 43 : $returnDescription.hashCode());
		final Object $description = this.getDescription();
		result = result * PRIME + ($description == null ? 43 : $description.hashCode());
		final Object $parameter = this.getParameter();
		result = result * PRIME + ($parameter == null ? 43 : $parameter.hashCode());
		return result;
	}

	@Override

	public java.lang.String toString() {
		return "MethodInformation(name=" + this.getName() + ", returnType=" + this.getReturnType() + ", returnDescription=" + this.getReturnDescription() + ", description=" + this.getDescription() + ", parameter=" + this.getParameter() + ")";
	}


	public MethodInformation(final String name, final Class returnType, final String returnDescription, final String description, final List<MethodParameter> parameter) {
		this.name = name;
		this.returnType = returnType;
		this.returnDescription = returnDescription;
		this.description = description;
		this.parameter = parameter;
	}
}
