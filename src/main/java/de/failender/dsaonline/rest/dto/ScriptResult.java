// Generated by delombok at Thu Nov 22 18:54:11 CET 2018
package de.failender.dsaonline.rest.dto;

import de.failender.dsaonline.scripting.ScriptLog;

public class ScriptResult {
	private ScriptLog[] logs;
	private Object result;


	public ScriptLog[] getLogs() {
		return this.logs;
	}


	public Object getResult() {
		return this.result;
	}


	public void setLogs(final ScriptLog[] logs) {
		this.logs = logs;
	}


	public void setResult(final Object result) {
		this.result = result;
	}

	@Override

	public boolean equals(final Object o) {
		if (o == this) return true;
		if (!(o instanceof ScriptResult)) return false;
		final ScriptResult other = (ScriptResult) o;
		if (!other.canEqual((Object) this)) return false;
		if (!java.util.Arrays.deepEquals(this.getLogs(), other.getLogs())) return false;
		final Object this$result = this.getResult();
		final Object other$result = other.getResult();
		if (this$result == null ? other$result != null : !this$result.equals(other$result)) return false;
		return true;
	}


	protected boolean canEqual(final Object other) {
		return other instanceof ScriptResult;
	}

	@Override

	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + java.util.Arrays.deepHashCode(this.getLogs());
		final Object $result = this.getResult();
		result = result * PRIME + ($result == null ? 43 : $result.hashCode());
		return result;
	}

	@Override

	public java.lang.String toString() {
		return "ScriptResult(logs=" + java.util.Arrays.deepToString(this.getLogs()) + ", result=" + this.getResult() + ")";
	}


	public ScriptResult(final ScriptLog[] logs, final Object result) {
		this.logs = logs;
		this.result = result;
	}
}
