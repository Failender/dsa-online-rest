// Generated by delombok at Thu Nov 22 18:54:11 CET 2018
package de.failender.dsaonline.util;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.MismatchedInputException;
import de.failender.dsaonline.data.repository.UserRepository;
import de.failender.dsaonline.rest.dto.UserData;
import de.failender.dsaonline.security.SecurityUtils;
import de.failender.dsaonline.service.UserService;
import de.failender.heldensoftware.api.HeldenApi;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.event.ApplicationReadyEvent;
import org.springframework.context.ApplicationListener;
import org.springframework.context.annotation.Profile;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Component;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

@Component
@Profile("dev")
public class DevInsertTestData implements ApplicationListener<ApplicationReadyEvent> {

	private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(DevInsertTestData.class);
	@Autowired
	private UserService userService;
	@Autowired
	private UserRepository userRepository;

	@Autowired
	private HeldenApi heldenApi;


	@Override
	public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
		log.info("Starting to insert dev data");
		List<GrantedAuthority> fakeRights = new ArrayList<>();
		fakeRights.add(new SimpleGrantedAuthority(SecurityUtils.CREATE_USER));
		fakeRights.add(new SimpleGrantedAuthority(SecurityUtils.EDIT_ALL));
		SecurityContextHolder.getContext().setAuthentication(new UsernamePasswordAuthenticationToken(userRepository.findById(1).get(), null, fakeRights));
		InputStream is = DevInsertTestData.class.getClassLoader().getResourceAsStream("user.json");
		ObjectMapper om = new ObjectMapper();
		try {
			List<UserData> data = om.readValue(is, new TypeReference<List<UserData>>() {
			});
			userService.createUsers(data);
		} catch (MismatchedInputException e) {
			log.info("user.json not found");
		} catch (Exception e) {
			log.error("Error while inserting user data", e);
		}
		SecurityContextHolder.getContext().setAuthentication(null);
		log.info("Done inserting dev data");
//		String token = userRepository.findByName("Failender").getToken();
//		SteigerungsTalent armbrust = heldenApi.request(new ListTalenteRequest(new TokenAuthentication(token), BigInteger.valueOf(37987L)))
//				.block()
//				.getTalent()
//				.stream()
//				.filter(talent -> talent.getTalent().equals("Armbrust"))
//				.findFirst().get();
//		String answer = heldenApi.request(new RaiseTalentRequest(new TokenAuthentication(token), BigInteger.valueOf(37987L), "Armbrust", 5))
//				.block();
//		System.out.println(answer);

	}
}
