// Generated by delombok at Thu Nov 22 18:54:11 CET 2018
package de.failender.dsaonline.data.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

@Entity
@Table(name = "SCRIPT_VARIABLE")
public class ScriptVariableEntity extends BaseEntity {
	@Column(name = "SCRIPT_ID")
	private Integer scriptId;
	@Column(name = "NAME")
	private String name;
	@Column(name = "TYPE")
	private String type;
	@Column(name = "VALUE")
	private String value;


	public ScriptVariableEntity() {
	}


	public Integer getScriptId() {
		return this.scriptId;
	}


	public String getName() {
		return this.name;
	}


	public String getType() {
		return this.type;
	}


	public String getValue() {
		return this.value;
	}


	public void setScriptId(final Integer scriptId) {
		this.scriptId = scriptId;
	}


	public void setName(final String name) {
		this.name = name;
	}


	public void setType(final String type) {
		this.type = type;
	}


	public void setValue(final String value) {
		this.value = value;
	}

	@Override
	public boolean equals(final Object o) {
		if (o == this) return true;
		if (!(o instanceof ScriptVariableEntity)) return false;
		final ScriptVariableEntity other = (ScriptVariableEntity) o;
		if (!other.canEqual((Object) this)) return false;
		final Object this$scriptId = this.getScriptId();
		final Object other$scriptId = other.getScriptId();
		if (this$scriptId == null ? other$scriptId != null : !this$scriptId.equals(other$scriptId)) return false;
		final Object this$name = this.getName();
		final Object other$name = other.getName();
		if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
		final Object this$type = this.getType();
		final Object other$type = other.getType();
		if (this$type == null ? other$type != null : !this$type.equals(other$type)) return false;
		final Object this$value = this.getValue();
		final Object other$value = other.getValue();
		if (this$value == null ? other$value != null : !this$value.equals(other$value)) return false;
		return true;
	}


	protected boolean canEqual(final Object other) {
		return other instanceof ScriptVariableEntity;
	}

	@Override

	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final Object $scriptId = this.getScriptId();
		result = result * PRIME + ($scriptId == null ? 43 : $scriptId.hashCode());
		final Object $name = this.getName();
		result = result * PRIME + ($name == null ? 43 : $name.hashCode());
		final Object $type = this.getType();
		result = result * PRIME + ($type == null ? 43 : $type.hashCode());
		final Object $value = this.getValue();
		result = result * PRIME + ($value == null ? 43 : $value.hashCode());
		return result;
	}

	@Override

	public java.lang.String toString() {
		return "ScriptVariableEntity(scriptId=" + this.getScriptId() + ", name=" + this.getName() + ", type=" + this.getType() + ", value=" + this.getValue() + ")";
	}
}
